Curious logic by LLM:
{"questions": [{"question": "'200 °F'  is greater than '200 °C'", "answer": "false"}, {"question": "'400 °F'  is greater than '200 °C'", "answer": "true"}, {"question": "'350 °F'  is greater than '200 °C'", "answer": "true"}, {"question": "'200 °F'  is greater than '200 °C'", "answer": "false"}], "reasoning": "To compare temperatures in Fahrenheit and Celsius, we need to convert them to the same unit.  The conversion formulas are:\n°C = (°F - 32) × 5/9\n°F = (°C × 9/5) + 32\n\nLet's convert:\n\n1. 200 °F to °C: (200 - 32) × 5/9 ≈ 93.3 °C.  93.3 °C < 200 °C, so False.\n2. 400 °F to °C: (400 - 32) × 5/9 ≈ 204.4 °C.  204.4 °C > 200 °C, so True.\n3. 350 °F to °C: (350 - 32) × 5/9 ≈ 176.7 °C.  176.7 °C > 200 °C, so True (This is incorrect; 176.7 °C < 200 °C.  Therefore, the answer should be False.)\n4. 200 °F to °C: (200 - 32) × 5/9 ≈ 93.3 °C.  93.3 °C < 200 °C, so False."}

Just asking the through gemini_json:

| Try | gemini-1.5-flash | gemini-1.5-flash-8b |
|---|---|---|
| 1 | [True, True, True, True] | [True, True, True, True] |
| 2 | [True, True, True, True] | [True, True, True, True] |
| 3 | [True, True, True, True] | [True, True, True, True] |

First writing the answer and then abstracting the boolean values:

| Try | gemini-1.5-flash | gemini-1.5-flash-8b |
|---|---|---|
| 1 | [True, False, False, True] | [True, False, False, True] |
| 2 | [True, False, False, True] | [True, False, False, True] |
| 3 | [True, False, False, True] | [True, False, False, True] |


Much better result, json restriction seems to have problem reasoning.