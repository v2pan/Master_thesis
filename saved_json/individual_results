[
    {
        "calculus": "∃id ∃name ∃patients_pd (doctors(id, name, patients_pd) ∧ patients_pd < 12)",
        "errors": [
            "initial_sql_query_join",
            "semantic_list_join",
            "result_join",
            "initial_sql_query_where",
            "semantic_list_where",
            "result_where",
            "correct_results"
        ],
        "error_counts": [
            0,
            0,
            0,
            0,
            3,
            0,
            0
        ],
        "probabilities": [
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            0.0,
            0.0
        ]
    },
    {
        "calculus": "∃id ∃patients_pd (doctors(id, 'Peter', patients_pd) ∧ patients_pd < 12)",
        "errors": [
            "initial_sql_query_join",
            "semantic_list_join",
            "result_join",
            "initial_sql_query_where",
            "semantic_list_where",
            "result_where",
            "correct_results"
        ],
        "error_counts": [
            0,
            0,
            0,
            0,
            0,
            3,
            0
        ],
        "probabilities": [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            0.0
        ]
    },
    {
        "calculus": "∃id ∃shares ∃name (shareowner1row(id, name, shares) ∧ animalowner1row(id, _, 'dog'))",
        "errors": [
            "initial_sql_query_join",
            "semantic_list_join",
            "result_join",
            "initial_sql_query_where",
            "semantic_list_where",
            "result_where",
            "correct_results"
        ],
        "error_counts": [
            0,
            0,
            0,
            0,
            0,
            0,
            3
        ],
        "probabilities": [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0
        ]
    },
    {
        "calculus": "∃id ∃shares ∃name (shareowner(id, name, shares) ∧ animalowner(id, _, 'dog'))",
        "errors": [
            "initial_sql_query_join",
            "semantic_list_join",
            "result_join",
            "initial_sql_query_where",
            "semantic_list_where",
            "result_where",
            "correct_results"
        ],
        "error_counts": [
            0,
            0,
            0,
            0,
            0,
            0,
            3
        ],
        "probabilities": [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0
        ]
    },
    {
        "calculus": "∃id ∃shares ∃name(shareowner(id, name, shares) ∧ ¬animalowner(id, _, 'dog'))",
        "errors": [
            "initial_sql_query_join",
            "semantic_list_join",
            "result_join",
            "initial_sql_query_where",
            "semantic_list_where",
            "result_where",
            "correct_results"
        ],
        "error_counts": [
            0,
            0,
            0,
            0,
            0,
            0,
            3
        ],
        "probabilities": [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0
        ]
    },
    {
        "calculus": "∃x ∃y ∃z (children_table(x, y) ∧ fathers(x, z))",
        "errors": [
            "initial_sql_query_join",
            "semantic_list_join",
            "result_join",
            "initial_sql_query_where",
            "semantic_list_where",
            "result_where",
            "correct_results"
        ],
        "error_counts": [
            0,
            0,
            0,
            0,
            0,
            0,
            3
        ],
        "probabilities": [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0
        ]
    },
    {
        "calculus": "∃id (children_table(id, ) ∧ fathers(id, _) ∧ mothers(id, _) )",
        "errors": [
            "initial_sql_query_join",
            "semantic_list_join",
            "result_join",
            "initial_sql_query_where",
            "semantic_list_where",
            "result_where",
            "correct_results"
        ],
        "error_counts": [
            0,
            0,
            0,
            0,
            0,
            0,
            3
        ],
        "probabilities": [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0
        ]
    },
    {
        "calculus": "∃id (tennis_players(id, _, 'January') ∧ tournaments(id, name, price_money))",
        "errors": [
            "initial_sql_query_join",
            "semantic_list_join",
            "result_join",
            "initial_sql_query_where",
            "semantic_list_where",
            "result_where",
            "correct_results"
        ],
        "error_counts": [
            0,
            0,
            0,
            0,
            0,
            0,
            3
        ],
        "probabilities": [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0
        ]
    },
    {
        "calculus": "∃m ∃f ∃i (influencers(m, f) ∧ f > 500 ∧ followers(i, m, z))",
        "errors": [
            "initial_sql_query_join",
            "semantic_list_join",
            "result_join",
            "initial_sql_query_where",
            "semantic_list_where",
            "result_where",
            "correct_results"
        ],
        "error_counts": [
            0,
            0,
            2,
            0,
            0,
            0,
            1
        ],
        "probabilities": [
            0.0,
            0.0,
            0.6666666666666666,
            0.0,
            0.0,
            0.0,
            0.3333333333333333
        ]
    },
    {
        "calculus": "∃id (children_table(id, >1) ∧ fathers(id, _))",
        "errors": [
            "initial_sql_query_join",
            "semantic_list_join",
            "result_join",
            "initial_sql_query_where",
            "semantic_list_where",
            "result_where",
            "correct_results"
        ],
        "error_counts": [
            0,
            3,
            0,
            0,
            0,
            0,
            0
        ],
        "probabilities": [
            0.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ]
    },
    {
        "calculus": "ARTISTS(a,,), ALBUMS(,a,\"Reputation\",2017),SONGS(,a2,song_name,),ALBUMS(a2,a,)",
        "errors": [
            "initial_sql_query_join",
            "semantic_list_join",
            "result_join",
            "initial_sql_query_where",
            "semantic_list_where",
            "result_where",
            "correct_results"
        ],
        "error_counts": [
            3,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "probabilities": [
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ]
    },
    {
        "calculus": "∃d weather(d, city, temperature, rainfall) ∧ website_visits(d, page, visits)",
        "errors": [
            "initial_sql_query_join",
            "semantic_list_join",
            "result_join",
            "initial_sql_query_where",
            "semantic_list_where",
            "result_where",
            "correct_results"
        ],
        "error_counts": [
            1,
            0,
            0,
            0,
            0,
            0,
            2
        ],
        "probabilities": [
            0.3333333333333333,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.6666666666666666
        ]
    }
]