{
    "∃id ∃name ∃patients_pd (doctors(id, name, patients_pd) ∧ patients_pd < 12)": {
        "initial_sql_query_join": 0,
        "semantic_list_join": 0,
        "result_join": 0,
        "initial_sql_query_where": 0,
        "semantic_list_where": 3,
        "result_where": 0,
        "correct_results": 0
    },
    "∃id ∃patients_pd (doctors(id, 'Peter', patients_pd) ∧ patients_pd < 12)": {
        "initial_sql_query_join": 0,
        "semantic_list_join": 0,
        "result_join": 0,
        "initial_sql_query_where": 2,
        "semantic_list_where": 1,
        "result_where": 0,
        "correct_results": 0
    },
    "∃id ∃shares ∃name (shareowner1row(id, name, shares) ∧ animalowner1row(id, _, 'dog'))": {
        "initial_sql_query_join": 0,
        "semantic_list_join": 0,
        "result_join": 0,
        "initial_sql_query_where": 0,
        "semantic_list_where": 0,
        "result_where": 0,
        "correct_results": 3
    },
    "∃id ∃shares ∃name (shareowner(id, name, shares) ∧ animalowner(id, _, 'dog'))": {
        "initial_sql_query_join": 0,
        "semantic_list_join": 0,
        "result_join": 0,
        "initial_sql_query_where": 0,
        "semantic_list_where": 1,
        "result_where": 0,
        "correct_results": 2
    },
    "∃id ∃shares ∃name(shareowner(id, name, shares) ∧ ¬animalowner(id, _, 'dog'))": {
        "initial_sql_query_join": 3,
        "semantic_list_join": 0,
        "result_join": 0,
        "initial_sql_query_where": 0,
        "semantic_list_where": 0,
        "result_where": 0,
        "correct_results": 0
    },
    "∃x ∃y ∃z (children_table(x, y) ∧ fathers(x, z))": {
        "initial_sql_query_join": 0,
        "semantic_list_join": 0,
        "result_join": 0,
        "initial_sql_query_where": 0,
        "semantic_list_where": 0,
        "result_where": 0,
        "correct_results": 3
    },
    "∃id (children_table(id, ) ∧ fathers(id, _) ∧ mothers(id, _) )": {
        "initial_sql_query_join": 0,
        "semantic_list_join": 0,
        "result_join": 0,
        "initial_sql_query_where": 0,
        "semantic_list_where": 0,
        "result_where": 0,
        "correct_results": 3
    },
    "∃id (tennis_players(id, _, 'January') ∧ tournaments(id, name, price_money))": {
        "initial_sql_query_join": 0,
        "semantic_list_join": 0,
        "result_join": 0,
        "initial_sql_query_where": 0,
        "semantic_list_where": 1,
        "result_where": 0,
        "correct_results": 2
    },
    "∃m ∃f ∃i (influencers(m, f) ∧ f > 500 ∧ followers(i, m, z))": {
        "initial_sql_query_join": 0,
        "semantic_list_join": 0,
        "result_join": 0,
        "initial_sql_query_where": 0,
        "semantic_list_where": 0,
        "result_where": 0,
        "correct_results": 3
    },
    "∃id (children_table(id, >1) ∧ fathers(id, _))": {
        "initial_sql_query_join": 0,
        "semantic_list_join": 2,
        "result_join": 0,
        "initial_sql_query_where": 0,
        "semantic_list_where": 0,
        "result_where": 0,
        "correct_results": 1
    },
    "∃item bakery_sales(item,_,_) ∧ oven_temperature(item, >200 °C)": {
        "initial_sql_query_join": 0,
        "semantic_list_join": 0,
        "result_join": 0,
        "initial_sql_query_where": 0,
        "semantic_list_where": 1,
        "result_where": 0,
        "correct_results": 2
    },
    "∃item bakery_sales(item,quantity < 55,_) ∧ oven_temperature(item,_)": {
        "initial_sql_query_join": 2,
        "semantic_list_join": 0,
        "result_join": 0,
        "initial_sql_query_where": 0,
        "semantic_list_where": 0,
        "result_where": 0,
        "correct_results": 1
    },
    "∃item bakery_sales(item, > 90,_) ∧ oven_temperature(item, >180 °C)": {
        "initial_sql_query_join": 2,
        "semantic_list_join": 0,
        "result_join": 0,
        "initial_sql_query_where": 0,
        "semantic_list_where": 0,
        "result_where": 0,
        "correct_results": 1
    },
    "∃movie movies(movie,_, _) ∧ movies_personal(movie, _)": {
        "initial_sql_query_join": 0,
        "semantic_list_join": 0,
        "result_join": 0,
        "initial_sql_query_where": 0,
        "semantic_list_where": 0,
        "result_where": 0,
        "correct_results": 3
    },
    "∃movie movies(movie,_, _) ∧ movies_personal(movie, >70%)": {
        "initial_sql_query_join": 3,
        "semantic_list_join": 0,
        "result_join": 0,
        "initial_sql_query_where": 0,
        "semantic_list_where": 0,
        "result_where": 0,
        "correct_results": 0
    },
    "∃ movies(\"The sky over Berlin\",_,_)": {
        "initial_sql_query_join": 0,
        "semantic_list_join": 0,
        "result_join": 0,
        "initial_sql_query_where": 2,
        "semantic_list_where": 0,
        "result_where": 0,
        "correct_results": 1
    },
    "∃clicks influencers( _ , clicks) ∧ publication_clicks(_ , clicks)": {
        "initial_sql_query_join": 0,
        "semantic_list_join": 0,
        "result_join": 0,
        "initial_sql_query_where": 0,
        "semantic_list_where": 0,
        "result_where": 0,
        "correct_results": 3
    },
    "∃date weather(date, city, temperature, rainfall) ∧ website_visits(date, page, visits)": {
        "initial_sql_query_join": 0,
        "semantic_list_join": 0,
        "result_join": 0,
        "initial_sql_query_where": 0,
        "semantic_list_where": 0,
        "result_where": 0,
        "correct_results": 3
    },

    "ARTISTS(a,,), ALBUMS(,a,\"Reputation\",2017),SONGS(,a2,song_name,),ALBUMS(a2,a,)": {
        "initial_sql_query_join": 0,
        "semantic_list_join": 0,
        "result_join": 0,
        "initial_sql_query_where": 0,
        "semantic_list_where": 0,
        "result_where": 0,
        "correct_results": 3
    }
}