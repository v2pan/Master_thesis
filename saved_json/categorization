{
  "Different languages": [
    "∃id ∃shares ∃name (shareowner1row(id, name, shares) ∧ animalowner1row(id, _, 'dog'))",
    "∃id ∃shares ∃name (shareowner(id, name, shares) ∧ animalowner(id, _, 'dog'))",
    "∃id ∃shares ∃name(shareowner(id, name, shares) ∧ ¬animalowner(id, _, 'dog'))",
    "∃ movies(\"The sky over Berlin\",_,_)"
  ],
  "Different scales": [
    "∃m ∃f ∃i (influencers(m, f) ∧ f > 500 ∧ followers(i, m, z))",
    
    "∃item bakery_sales(item,_,_) ∧ oven_temperature(item, >200 °C)",
    "∃item bakery_sales(item,quantity < 55,_) ∧ oven_temperature(item,_)",
    "∃item bakery_sales(item, > 90,_) ∧ oven_temperature(item, >180 °C)"
  ],
  "Inconsistencies": [
    "∃id ∃name ∃patients_pd (doctors(id, name, patients_pd) ∧ patients_pd < 12)",
    "∃id ∃patients_pd (doctors(id, 'Peter', patients_pd) ∧ patients_pd < 12)",
    "∃id (tennis_players(id, _, 'January') ∧ tournaments(id, name, price_money))"
  ],
  "Inconsistencies JOIN ": [
    "∃x ∃y ∃z (children_table(x, y) ∧ fathers(x, z))",
    "∃id (children_table(id, ) ∧ fathers(id, _) ∧ mothers(id, _) )",
    "∃id (children_table(id, >1) ∧ fathers(id, _))",
    "∃movie movies(movie,_, _) ∧ movies_personal(movie, _)",
    "∃movie movies(movie,_, _) ∧ movies_personal(movie, >70%)",
    "∃date weather(date, city, temperature, rainfall) ∧ website_visits(date, page, visits)",
    "∃clicks influencers( _ , clicks) ∧ publication_clicks(_ , clicks)"
  ],
  "Uncategorizable": [
    "ARTISTS(a,,), ALBUMS(,a,\"Reputation\",2017),SONGS(,a2,song_name,),ALBUMS(a2,a,)"
  ]
}